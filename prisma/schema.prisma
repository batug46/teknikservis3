// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  status    String   @default("pending")
  total     Float
  phone     String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  items     OrderItem[]
}
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  adSoyad   String
  role      String   @default("user")
  phone     String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  appointments Appointment[]
  orders    Order[]
  sentMessages     PrivateMessage[] @relation("SentMessages")
  receivedMessages PrivateMessage[] @relation("ReceivedMessages")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String @unique
  description String?
  price       Float
  imageUrl    String?
  category    String   @default("other")
  stock       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // BU SATIRIN EKSİK OLDUĞUNU DÜŞÜNÜYORUM, KONTROL EDİN
  orderItems  OrderItem[]
}
model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
  rating    Int?     // Puan alanı (1-5 arası, isteğe bağlı)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Message {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  status    String   @default("unread")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Appointment {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  serviceType String
  description String
  date        DateTime
  time        String
  status      String   @default("pending")
  notes       String?
  phone       String?  // YENİ ALAN: Telefon numarası (isteğe bağlı)
  address     String?  // YENİ ALAN: Adres (isteğe bağlı)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Page {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Slider {
  id        Int      @id @default(autoincrement())
  title     String
  imageUrl  String
  link      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt // <-- BU SATIRI EKLEYİN
}

model ServiceRecord {
  id          Int      @id @default(autoincrement())
  deviceType  String
  brand       String
  model       String
  serialNumber String?
  problem     String
  diagnosis   String?
  solution    String?
  status      String   @default("received")
  cost        Float?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
} 

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model PrivateMessage {
  id          Int      @id @default(autoincrement())
  sender      User     @relation("SentMessages", fields: [senderId], references: [id])
  senderId    Int
  recipient   User     @relation("ReceivedMessages", fields: [recipientId], references: [id])
  recipientId Int
  subject     String
  body        String   // DÜZELTME: @db.Text ifadesi SQLite ile uyumlu olmadığı için kaldırıldı.
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())

  @@index([senderId])
  @@index([recipientId])
}